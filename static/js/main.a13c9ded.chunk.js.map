{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Object","objectSpread","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","Axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","axios","delete","_this$props$contact","name","email","phone","className","onClick","style","cursor","color","float","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","layout_TextInputGroup","EditContact","_callee","updatedContact","regenerator_default","wrap","_context","prev","next","abrupt","match","params","put","sent","stop","About","NotFound","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a13c9ded.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                contacts: state.contacts.filter(\n                    contact => contact.id !== action.payload\n                )\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id\n                        ? (contact = action.payload)\n                        : contact\n                )\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n\n        dispatch: action => {\n            this.setState(state => reducer(state, action));\n        }\n    };\n\n    componentDidMount() {\n        Axios.get('https://jsonplaceholder.typicode.com/users').then(res =>\n            this.setState({ contacts: res.data })\n        );\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../Context';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onShowClick = e => {\n        this.setState({\n            showContactInfo: !this.state.showContactInfo\n        });\n    };\n\n    onDeleteClick = (dispatch, id) => {\n        axios\n            .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            .then(res => {\n                dispatch({ type: 'DELETE_CONTACT', payload: id });\n            });\n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}{' '}\n                                <i\n                                    onClick={this.onShowClick}\n                                    className=\"fas fa-sort-down\"\n                                    style={{ cursor: 'pointer' }}\n                                />\n                                <i\n                                    className=\"fas fa-times\"\n                                    style={{\n                                        color: 'red',\n                                        float: 'right',\n                                        cursor: 'pointer'\n                                    }}\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        dispatch,\n                                        id\n                                    )}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            color: 'black',\n                                            float: 'right',\n                                            cursor: 'pointer',\n                                            marginRight: '1rem'\n                                        }}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        Email: {email}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Phone: {phone}\n                                    </li>\n                                </ul>\n                            ) : null}\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../Context';\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-5 mb-2\">\n                                <span className=\"text-danger\">Contact</span>{' '}\n                                List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact key={contact.id} contact={contact} />\n                            ))}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Header = props => {\n    const { branding } = props;\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n                <div className=\"container\">\n                    <a href=\"/\" className=\"navbar-brand\">\n                        {branding}\n                    </a>\n                    <div>\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item mr-2\">\n                                <Link to=\"/\" className=\"nav-link\">\n                                    Home\n                                </Link>\n                            </li>\n                            <li className=\"nav-item mr-2\">\n                                <Link to=\"/contact/add\" className=\"nav-link\">\n                                    Add Contact\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/about\" className=\"nav-link\">\n                                    About\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    type,\n    placeholder,\n    value,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control', { 'is-invalid': error })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            <div className=\"invalid-feedback\">{error}</div>\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from './../../Context';\nimport Axios from 'axios';\n\nimport TextInputGroup from './../layout/TextInputGroup';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    onSubmit = (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        if (name === '') {\n            this.setState({\n                errors: { name: 'Name is required' }\n            });\n            return;\n        }\n        if (email === '') {\n            this.setState({\n                errors: { email: 'Email is required' }\n            });\n            return;\n        }\n        if (phone === '') {\n            this.setState({\n                errors: { phone: 'Phone is required' }\n            });\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        };\n\n        Axios.post(\n            'https://jsonplaceholder.typicode.com/users/',\n            newContact\n        ).then(res => {\n            dispatch({ type: 'ADD_CONTACT', payload: res.data });\n        });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div>\n                            <div className=\"card mb-3\">\n                                <div className=\"card-header\">Add Contact</div>\n                                <div className=\"card-body\">\n                                    <form\n                                        onSubmit={this.onSubmit.bind(\n                                            this,\n                                            dispatch\n                                        )}\n                                    >\n                                        <TextInputGroup\n                                            label=\"Name\"\n                                            name=\"name\"\n                                            placeholder=\"Enter name\"\n                                            value={name}\n                                            onChange={this.onChange}\n                                            error={errors.name}\n                                        />\n                                        <TextInputGroup\n                                            label=\"Email\"\n                                            name=\"email\"\n                                            type=\"email\"\n                                            placeholder=\"Enter email\"\n                                            value={email}\n                                            onChange={this.onChange}\n                                            error={errors.email}\n                                        />\n                                        <TextInputGroup\n                                            label=\"Phone\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter phone\"\n                                            value={phone}\n                                            onChange={this.onChange}\n                                            error={errors.phone}\n                                        />\n                                        <input\n                                            type=\"submit\"\n                                            className=\"btn btn-secondary btn-block\"\n                                            value=\"Add Contact\"\n                                        />\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from './../../Context';\nimport axios from 'axios';\nimport TextInputGroup from './../layout/TextInputGroup';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(\n            `https://jsonplaceholder.typicode.com/users/${id}`\n        );\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        if (name === '') {\n            this.setState({\n                errors: { name: 'Name is required' }\n            });\n            return;\n        }\n        if (email === '') {\n            this.setState({\n                errors: { email: 'Email is required' }\n            });\n            return;\n        }\n        if (phone === '') {\n            this.setState({\n                errors: { phone: 'Phone is required' }\n            });\n            return;\n        }\n\n        const { id } = this.props.match.params;\n        const updatedContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.put(\n            `https://jsonplaceholder.typicode.com/users/${id}`,\n            updatedContact\n        );\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div>\n                            <div className=\"card mb-3\">\n                                <div className=\"card-header\">Edit Contact</div>\n                                <div className=\"card-body\">\n                                    <form\n                                        onSubmit={this.onSubmit.bind(\n                                            this,\n                                            dispatch\n                                        )}\n                                    >\n                                        <TextInputGroup\n                                            label=\"Name\"\n                                            name=\"name\"\n                                            placeholder=\"Enter name\"\n                                            value={name}\n                                            onChange={this.onChange}\n                                            error={errors.name}\n                                        />\n                                        <TextInputGroup\n                                            label=\"Email\"\n                                            name=\"email\"\n                                            type=\"email\"\n                                            placeholder=\"Enter email\"\n                                            value={email}\n                                            onChange={this.onChange}\n                                            error={errors.email}\n                                        />\n                                        <TextInputGroup\n                                            label=\"Phone\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter phone\"\n                                            value={phone}\n                                            onChange={this.onChange}\n                                            error={errors.phone}\n                                        />\n                                        <input\n                                            type=\"submit\"\n                                            className=\"btn btn-secondary btn-block\"\n                                            value=\"Update Contact\"\n                                        />\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-5 mb-2\">About Contact Manager</h1>\n            <p className=\"lead\">A simple app to manage your contacts.</p>\n            <p className=\"text-muted\">Version 1.0.0</p>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-5\">\n                <span className=\"text-danger\">404</span> Page Not Found\n            </h1>\n            <p className=\"lead\">Sorry, the page does not exist.</p>\n        </div>\n    );\n};\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts} />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route\n                                    exact\n                                    path=\"/contact/add\"\n                                    component={AddContact}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/contact/edit/:id\"\n                                    component={EditContact}\n                                />\n                                <Route component={NotFound} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}